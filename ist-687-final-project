### Pat Carlin
### IST 687 FinalProject 

#################### Section 0: Loading and Cleaning the Data 
### Insalling Packages
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggmap")
install.packages("mapdata")
install.packages("wordcloud")
install.packages("tm")
library(mapdata)
library(ggmap)
library(ggplot2)
library(dplyr)
library(wordcloud)
library(tm)

### Reading the data into R
ProjectData <- read.csv("ProjectFullDataSet.csv")
View(ProjectData)
str(ProjectData)

### Cleaning the names and punctuation of the dataset
colnames(ProjectData)
colnames(ProjectData)[6]<- "YearOfFirstFlight"
colnames(ProjectData)[8]<- "FlightsWithOtherAirlines"
colnames(ProjectData)[7]<- "FlightsPerYear"
colnames(ProjectData)[9]<- "TypeOfTravel"
colnames(ProjectData)[10]<- "NoOfOtherLoyaltyCards"
colnames(ProjectData)[11]<- "ShoppingAtAirport"
colnames(ProjectData)[12]<- "EatingAndDrinkingAtAirport"
colnames(ProjectData)[14]<- "DayOfMonth"
colnames(ProjectData)[15]<- "FlightDate"
colnames(ProjectData)[25]<- "FlightsCancelled"
colnames(ProjectData)[26]<- "FlightTimeInMinutes"
colnames(ProjectData)[28]<- "ArrivalDelayGreaterThan5mins"
colnames(ProjectData)[23]<- "DepartureDelayInMinutes"
colnames(ProjectData)[24]<- "ArrivalDelayInMinutes"
colnames(ProjectData)[18]<- "OriginCity"

ProjectData$DestinationCity<- gsub("(.*),.*", "\\1",ProjectData$DestinationCity)
ProjectData$OriginCity<- gsub("(.*),.*", "\\1",ProjectData$OriginCity)

names(ProjectData) <- gsub("\\.","", names(ProjectData))
names(ProjectData)

#################### Section 1: Focusing on our Southest Airlines Co. 
### Isolating the Southeast Airlines Co. 
SoutheastData <- ProjectData[which(ProjectData$AirlineName == "Southeast Airlines Co. " ),] #For Seperate DataFrame
View(SoutheastData)

### Dealing with NA's
SoutheastData$ArrivalDelayInMinutes[is.na(SoutheastData$ArrivalDelayInMinutes)] <- round(mean(SoutheastData$ArrivalDelayInMinutes, na.rm = TRUE))
SoutheastData$FlightTimeInMinutes[is.na(SoutheastData$FlightTimeInMinutes)] <- round(mean(SoutheastData$FlightTimeInMinutes, na.rm = TRUE))
SoutheastData$DepartureDelayInMinutes[is.na(SoutheastData$DepartureDelayInMinutes)] <- round(mean(SoutheastData$DepartureDelayInMinutes, na.rm = TRUE))

### Transforming columns in SoutheastData to 'Factor' and 'Numeric' 
SoutheastData$Satisfaction <- as.numeric(as.character(SoutheastData$Satisfaction))
SoutheastData$Age <- as.numeric(as.character(SoutheastData$Age))
SoutheastData$PriceSensitivity <- as.numeric(as.character(SoutheastData$PriceSensitivity))
SoutheastData$YearOfFirstFlight <- as.numeric(as.character(SoutheastData$YearOfFirstFlight))
SoutheastData$FlightsPerYear <- as.numeric(as.character(SoutheastData$FlightsPerYear))
SoutheastData$FlightsWithOtherAirlines <- as.numeric(as.character(SoutheastData$FlightsWithOtherAirlines))
SoutheastData$OriginState <- as.numeric(SoutheastData$OriginState)
SoutheastData$DestinationState <- as.numeric(SoutheastData$DestinationState)

#################### Section 2: Determining the effects of AgeOfPlane on the average Satisfaction
### Creating a new column; AgeOfPlane, within SoutheastData
SoutheastData$AgeOfPlane <- (2014 - SoutheastData$YearOfFirstFlight)
SoutheastData$AgeOfPlane

### Creating a bucket function for the the ages of the planes 
AgeOfPlaneFunction = function(vec)
{
  vBuckets = replicate(length(vec), "Standard Age") 
  vBuckets[vec >= 9] = "Old Plane"
  vBuckets[vec <= 4] = "New Plane" 
  return(vBuckets)
}

### Running the age column through the final function 
SoutheastData$AgeOfPlane <- AgeOfPlaneFunction(SoutheastData$AgeOfPlane)

### Creating average plot
SoutheastPlaneAge <- SoutheastData %>% group_by(AgeOfPlane) %>% summarise(AverageSatisfaction = mean(Satisfaction))

AgeSatisfactionPlot <- ggplot(SoutheastPlaneAge, aes(x = AgeOfPlane, y = AverageSatisfaction)) + geom_bar(stat = "identity", color = "darkblue", fill="lightblue") + ylim(0,5)
AgeSatisfactionPlot <- AgeSatisfactionPlot + ggtitle("Age of the Plane vs Satisfaction") +  xlab("Airline Age") + ylab("Satisfaciton") + scale_color_grey() + theme_classic()
AgeSatisfactionPlot <- AgeSatisfactionPlot + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
AgeSatisfactionPlot ### Determine it was useless for insights

#################### Section 3: Exploring how the TypeOfTravel effects the Satisfaction
### Plotting the average Satisfaction against TypeOfTravel
TypeOfTravSat <- SoutheastData %>% group_by(TypeOfTravel) %>% summarise(TypeSat = mean(Satisfaction))

TypeOfTravPlot <- ggplot(TypeOfTravSat, aes(x = TypeOfTravel, y = TypeSat)) + geom_bar(stat = "identity", color = "black", fill = "orange") + ylim(0,5)
TypeOfTravPlot <- TypeOfTravPlot + ggtitle("Type Of Travel vs Satisfaction") + xlab("Type Of Travel") + ylab("Satisfaction") 
TypeOfTravPlot <- TypeOfTravPlot + theme_classic() + theme(plot.title = element_text(hjust = 0.5))
TypeOfTravPlot

### Creating a boxplot to visualize frequency of the TypeOfTravel
TypeSatBoxPlot <- ggplot(data = SoutheastData, aes(x = TypeOfTravel, y = Satisfaction)) + geom_boxplot(fill = "lightblue", colour = "black")
TypeSatBoxPlot <- TypeSatBoxPlot + ggtitle("Type Of Travel vs Satisfaction") + xlab("Type Of Travel") + ylab("Satisfaction") + theme_bw() 
TypeSatBoxPlot <- TypeSatBoxPlot + theme(plot.title = element_text(hjust = 0.5)) + geom_jitter()
TypeSatBoxPlot

### Creating a smoothed scatter plot to see the effects of TypeOfTravel on Age and average Satisfaction
TypeAgeSatisfaction <- SoutheastData %>% group_by(Age, TypeOfTravel) %>% summarise(TypeAgeSat = mean(Satisfaction))

AgeTypeLinePlot <- ggplot(data = TypeAgeSatisfaction, aes( x = Age, y = TypeAgeSat, group = TypeOfTravel, colour = TypeOfTravel)) + geom_point() + geom_smooth()
AgeTypeLinePlot <- AgeTypeLinePlot + xlab("Age") + ylab("Satisfaction") + ggtitle("Types Of Travel vs Satisfaction") + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
AgeTypeLinePlot <- AgeTypeLinePlot + scale_x_continuous(breaks = seq(15, 85, 5))
AgeTypeLinePlot

### Plotting the AgeOfPlane against TypeOfTravel
AgeTypePlot <- ggplot(data = SoutheastData, aes(x = Age, fill = TypeOfTravel)) + geom_histogram(binwidth = 2) 
AgeTypePlot <- AgeTypePlot + xlab("Age") + ylab("Number Of Flights") + ggtitle("Types Of Travel Across Age") + theme_classic() + theme(plot.title = element_text(hjust = 0.5))
AgeTypePlot <- AgeTypePlot + scale_x_continuous(breaks = seq(15, 85, 5))
AgeTypePlot ### Need to find a better visual

### Finding the density plot for the TypeOfTravel and Age
TypeDensityPlot <- ggplot(SoutheastData, aes(Age)) + geom_density(aes(fill = factor(TypeOfTravel)), alpha=0.8) 
TypeDensityPlot <- TypeDensityPlot + xlab("Age") + ylab("Flight Density") + ggtitle("Flight Density for Travel Types") + theme_classic() + theme(plot.title = element_text(hjust = 0.5))
TypeDensityPlot <- TypeDensityPlot + scale_x_continuous(breaks = seq(15, 85, 5)) + guides(fill=guide_legend(title="Types"))
TypeDensityPlot

### Seeing the effects of Age on average PriceSensitivity between TypeOfTravel
PriceAgeSat <- SoutheastData %>% group_by(Age, TypeOfTravel) %>% summarise(PriceSat = mean(PriceSensitivity))

PriceAgePlot <- ggplot(data = PriceAgeSat, aes(x = Age, y = PriceSat, group = TypeOfTravel, colour = TypeOfTravel)) + geom_smooth()
PriceAgePlot <- PriceAgePlot + ggtitle("Satisfaction vs Time & Price Sensitivity") + xlab("Age") + ylab("Average Price Sensitivity") + theme_bw()
PriceAgePlot <- PriceAgePlot + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
PriceAgePlot <- PriceAgePlot + scale_x_continuous(breaks = seq(15, 85, 5))
PriceAgePlot

#################### Section 4: Exploring how Gender and Age affect Satisfaction within SoutheastData
### Showing variance in Gender and frequency of flight between the TypeOfTravel
TypeGenderPlot <- ggplot(data = SoutheastData, aes(x = TypeOfTravel, fill = Gender)) + geom_bar(colour = "black", stat="count", position = position_dodge(), size = .5) 
TypeGenderPlot <- TypeGenderPlot + scale_fill_hue(name="Gender") + xlab("Type Of Travel") + ylab("Number Of Flights") + ggtitle("Type Of Flights Across Gender") 
TypeGenderPlot <- TypeGenderPlot + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
TypeGenderPlot

### Plotting average Satisfaction against Age for Gender
GenderAgeSat <- SoutheastData %>% group_by(Age, Gender) %>% summarise(GenAgeSat = mean(Satisfaction))

GenderAgePlot <- ggplot(data = GenderAgeSat, aes(x = Age, y = GenAgeSat, group = Gender, colour = Gender)) + geom_line() 
GenderAgePlot <- GenderAgePlot + ggtitle("Satisfaction vs Time & Gender") + xlab("Age") + ylab("Satisfaction") + theme_classic()
GenderAgePlot <- GenderAgePlot + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
GenderAgePlot <- GenderAgePlot + scale_x_continuous(breaks = seq(15, 85, 5))
GenderAgePlot

#################### Section 5: Linear Modeling 
### Creating Linear models to find corellation between satisfaction and other variables
EatingModel <- lm(formula = Satisfaction ~ EatingAndDrinkingAtAirport, data = SoutheastData)
summary(EatingModel) ### Linearly significant 

### Creating the Airline Status vs Satisfaction Plot
AirlineStatusSat <- SoutheastData %>% group_by(AirlineStatus) %>% summarise(AirStatusSat = mean(Satisfaction))

AirStatusSatPlot <- ggplot(AirlineStatusSat, aes(x = AirlineStatus, y = AirStatusSat)) + geom_bar(stat = "identity", color = "black", fill="steelblue") + ylim(0,5)
AirStatusSatPlot <- AirStatusSatPlot + ggtitle("Airline Status vs Satisfaction ") + xlab("Airline Status") + ylab("Satisfaciton") 
AirStatusSatPlot <- AirStatusSatPlot + theme_bw() + theme(plot.title = element_text(hjust = 0.5))
AirStatusSatPlot

### Creating new columns for observable data 
SoutheastData$StatusBlue <- ifelse(SoutheastData$AirlineStatus == "Blue",1,0)
SoutheastData$StatusSilver <- ifelse(SoutheastData$AirlineStatus == "Silver",1,0)
SoutheastData$StatusPlatinum<- ifelse(SoutheastData$AirlineStatus == "Platinum",1,0)
SoutheastData$StatusGold <- ifelse(SoutheastData$AirlineStatus == "Gold",1,0)

SoutheastData$GenderMale <- ifelse(SoutheastData$Gender == "Male", 1, 0)

SoutheastData$BusinessTravel <- ifelse(SoutheastData$TypeOfTravel == "Business travel", 1, 0)
SoutheastData$MileageTickets <- ifelse(SoutheastData$TypeOfTravel == "Mileage tickets", 1, 0)
SoutheastData$PersonalTravel <- ifelse(SoutheastData$TypeOfTravel == "Personal Travel", 1, 0)

SoutheastData$BusinessClass <- ifelse(SoutheastData$Class == "Business", 1, 0)
SoutheastData$EcoClass <- ifelse(SoutheastData$Class == "Eco", 1, 0)
SoutheastData$EcoPlusClass <- ifelse(SoutheastData$Class == "Eco Plus", 1, 0)

SoutheastData$FlightsCancelled <- ifelse(SoutheastData$FlightsCancelled == "Yes", 1, 0)

SoutheastData$ArrivalDelayGreaterThan5mins <- ifelse(ProjectData$ArrivalDelayGreaterThan5mins == "yes", 1, 0)

SoutheastData$ArrivalDelayInMinutes[is.na(SoutheastData$ArrivalDelayInMinutes)] <- round(mean(SoutheastData$ArrivalDelayInMinutes, na.rm = TRUE))
SoutheastData$FlightTimeInMinutes[is.na(SoutheastData$FlightTimeInMinutes)] <- round(mean(SoutheastData$FlightTimeInMinutes, na.rm = TRUE))
SoutheastData$DepartureDelayInMinutes[is.na(SoutheastData$DepartureDelayInMinutes)] <- round(mean(SoutheastData$DepartureDelayInMinutes, na.rm = TRUE))


str(SoutheastData)
SoutheastData <- SoutheastData[,-15:-17]
table(ProjectData$FlightsCancelled)

model1 <- lm(formula=Satisfaction ~ Age + GenderMale + PriceSensitivity + YearOfFirstFlight + FlightsPerYear + FlightsWithOtherAirlines + NoOfOtherLoyaltyCards + ShoppingAtAirport + EatingAndDrinkingAtAirport + DayOfMonth + ScheduledDepartureHour + DepartureDelayInMinutes + ArrivalDelayInMinutes + FlightTimeInMinutes + FlightDistance + StatusSilver + StatusPlatinum + StatusGold + MileageTickets + PersonalTravel + BusinessClass + EcoPlusClass + FlightsCancelled + ArrivalDelayGreaterThan5mins , data = SoutheastData)
summary(model1)

###################### Section 6: SVM Model 
sum(is.na(SoutheastData$ArrivalDelayInMinutes)) #154
sum(is.na(SoutheastData$FlightTimeInMinutes)) #154
sum(is.na(SoutheastData$DepartureDelayInMinutes)) #129


SoutheastData$ArrivalDelayInMinutes[is.na(SoutheastData$ArrivalDelayInMinutes)] <- round(mean(SoutheastData$ArrivalDelayInMinutes, na.rm = TRUE))
SoutheastData$FlightTimeInMinutes[is.na(SoutheastData$FlightTimeInMinutes)] <- round(mean(SoutheastData$FlightTimeInMinutes, na.rm = TRUE))
SoutheastData$DepartureDelayInMinutes[is.na(SoutheastData$DepartureDelayInMinutes)] <- round(mean(SoutheastData$DepartureDelayInMinutes, na.rm = TRUE))


str(SoutheastData)

giveQuant <- function(y)
{
  q<- quantile(y,c(0.4,0.6))
  Buckets<-replicate(length(y),"Average")
  Buckets[y<=q[1]] <- "Low"
  Buckets[y>q[2]] <- "High"
  return(Buckets)
}

giveLevel<-function(x)
{
  BucketsClean <- replicate(length(x),"Average")
  BucketsClean[x>=4] <- "High"
  BucketsClean[x<=3.3] <- "Low"
  return (BucketsClean)
}

SouteasthData <- SoutheastData[,-14:-17]
SoutheastData$Age<- giveQuant(SoutheastData$Age)
SoutheastData$PriceSensitivity<-giveQuant(SoutheastData$PriceSensitivity)
SoutheastData$YearOfFirstFlight<-giveQuant(SoutheastData$YearOfFirstFlight)
SoutheastData$FlightsPerYear<-giveQuant(SoutheastData$FlightsPerYear)
SoutheastData$FlightsWithOtherAirlines<-giveQuant(SoutheastData$FlightsWithOtherAirlines)
SoutheastData$NoOfOtherLoyaltyCards<-giveQuant(SoutheastData$NoOfOtherLoyaltyCards)
SoutheastData$ShoppingAtAirport<-giveQuant(SoutheastData$ShoppingAtAirport)
SoutheastData$EatingAndDrinkingAtAirport<-giveQuant(SoutheastData$EatingAndDrinkingAtAirport)
SoutheastData$FlightDistance<-giveQuant(SoutheastData$FlightDistance)
SoutheastData$ArrivalDelayInMinutes<-giveQuant(SoutheastData$ArrivalDelayInMinutes)
SoutheastData$FlightTimeInMinutes<-giveQuant(SoutheastData$FlightTimeInMinutes)
SoutheastData$DepartureDelayInMinutes<-giveQuant(SoutheastData$DepartureDelayInMinutes)
SoutheastData$ScheduledDepartureHour<-giveQuant(SoutheastData$ScheduledDepartureHour)

SoutheastData$Satisfaction<- as.numeric(as.character(SoutheastData$Satisfaction))

SoutheastData$Satisfaction <- giveLevel(SoutheastData$Satisfaction)

install.packages("arules")
library(arules)

install.packages("arulesViz")
library(arulesViz)


str(SoutheastData)
SoutheastData$Satisfaction <- as.factor(SoutheastData$Satisfaction)
SoutheastData$Age<-as.factor(SoutheastData$Age)

SoutheastData$PriceSensitivity <- as.factor(SoutheastData$PriceSensitivity)
SoutheastData$YearOfFirstFlight<- as.factor(SoutheastData$YearOfFirstFlight)
SoutheastData$FlightsPerYear<-as.factor(SoutheastData$FlightsPerYear)
SoutheastData$FlightsWithOtherAirlines<- as.factor(SoutheastData$FlightsWithOtherAirlines)
SoutheastData$NoOfOtherLoyaltyCards <- as.factor(SoutheastData$NoOfOtherLoyaltyCards)
SoutheastData$ShoppingAtAirport<-as.factor(SoutheastData$ShoppingAtAirport)
SoutheastData$EatingAndDrinkingAtAirport<-as.factor(SoutheastData$EatingAndDrinkingAtAirport)
SoutheastData$DepartureDelayInMinutes<-as.factor(SoutheastData$DepartureDelayInMinutes)
SoutheastData$ArrivalDelayInMinutes<-as.factor(SoutheastData$ArrivalDelayInMinutes)
SoutheastData$FlightTimeInMinutes<- as.factor(SoutheastData$FlightTimeInMinutes)
SoutheastData$FlightDistance<-as.factor(SoutheastData$FlightDistance)
SoutheastData$ScheduledDepartureHour<-as.factor(SoutheastData$ScheduledDepartureHour)
SoutheastData$OriginCity<-as.factor(SoutheastData$OriginCity)
SoutheastData$DestinationCity<-as.factor(SoutheastData$DestinationCity)

ruleset <- apriori(SoutheastData, list(support = 0.40,confidence = 0.40)) 
inspect(ruleset)
ruleSub<- subset(ruleset, subset = rhs %in% "Satisfaction=High")
inspect(ruleSub)



ruleset <- apriori(SouthData, list(support = 0.30,confidence = 0.40)) 
inspect(ruleset)
ruleSub<- subset(ruleset, subset = rhs %in% "Satisfaction=Low")
inspect(ruleSub)

